<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
		
	<!-- 可以扫描controller、service、...这里让扫描controller，指定controller的包-->
	<context:component-scan base-package="forum.controller,common.controller"></context:component-scan>
	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->	
	<mvc:annotation-driven>
	    <mvc:argument-resolvers>
	        <bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
	    </mvc:argument-resolvers>
	</mvc:annotation-driven>
 	<mvc:resources mapping="/image/**" location="/WEB-INF/"/> 
    <mvc:resources mapping="/css/**" location="/WEB-INF/"/> 
    <mvc:resources mapping="/js/**" location="/WEB-INF/"/>
	
	<!-- 视图解析器(这个视图解析器，不能跟thymeleaf的视图templateResolver共存)
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<!-- <bean  
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
		<!-- 配置jsp路径的前缀 -->
		<!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
		<!-- 配置jsp路径的后缀 -->
		<!-- <property name="suffix" value=".jsp"/> -->
	<!-- </bean> -->
	
	<!-- 以下是thymeleaf的特有的配置 -->
	<bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix"  value="/WEB-INF/" />
        <property name="suffix"  value=".html" />
        <property name="templateMode"  value="HTML5" />
        <property name="characterEncoding"  value="UTF-8"/>
        <property name="cacheable"  value="false"/>
    </bean>
    
    <!-- 我的区分移动端，PC端的配置 -->
    <!--<bean id="shubingTemplateResolver" class="shubing.ShubingTemplateResolver">
    	<property name="prefix"  value="/WEB-INF/html/" />
        <property name="suffix"  value=".html" />
        <property name="templateMode"  value="HTML5" />
        <property name="characterEncoding"  value="UTF-8"/>
        <property name="cacheable"  value="false"/>
    </bean> -->
    
    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <!-- <property name="templateResolver" ref="shubingTemplateResolver" /> -->
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    
    <bean id="multipartResolver"
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">       
    </bean>
    
    
    <!-- 自定义参数绑定 -->
	<!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> -->
		<!-- 转换器 -->
		<!--<property name="converters"> -->
			<!--<list> -->
				<!-- 日期类型转换 -->
				<!--<bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"/> -->
			<!--</list> -->
		<!--</property>	 -->
	<!--</bean> -->
	
</beans>